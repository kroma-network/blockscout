name: ci

on:
  push:
    branches:
      - dev

jobs:
  ci:
    name: Run CI
    environment:
      name: dev
    strategy:
      matrix:
        os: [ ubuntu-latest ]
    runs-on: ${{ matrix.os }}
    
    steps:
      - name: Check out source code
        uses: actions/checkout@v3

      - name: Prepare
        id: prepare
        run: |
          if [[ $GITHUB_REF_TYPE == 'branch' ]];
          then
            echo ::set-output name=docker-tag::dev
          else
            echo ::set-output name=docker-tag::${GITHUB_REF#refs/tags/}
          fi

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ECR_ACCESS_ID }}
          aws-secret-access-key: ${{ secrets.AWS_ECR_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_ECR_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Publish kanvas blockscout
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./docker/Dockerfile
          cache-from: type=gha
          cache-to: type=gha,mode=max
          push: true
          tags: ${{ secrets.AWS_ECR_REPOSITORY }}/lightscale/kanvas-blockscout:${{ steps.prepare.outputs.docker-tag }}
          build-args: |
            CACHE_EXCHANGE_RATES_PERIOD=
            DISABLE_READ_API=false
            API_PATH=
            NETWORK_PATH=
            DISABLE_WEBAPP=false
            DISABLE_WRITE_API=false
            CACHE_ENABLE_TOTAL_GAS_USAGE_COUNTER=
            WOBSERVER_ENABLED=false
            ADMIN_PANEL_ENABLED=false
            CACHE_ADDRESS_WITH_BALANCES_UPDATE_INTERVAL=
            DISABLE_BRIDGE_MARKET_CAP_UPDATER=false
            CACHE_BRIDGE_MARKET_CAP_UPDATE_INTERVAL=
            SOCKET_ROOT=
